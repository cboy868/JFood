<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xueda.food.auth.dao.AuthRolePermissionsRelMapper">
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
  <resultMap id="BaseResultMap" type="com.xueda.food.auth.model.AuthRolePermissionsRel">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="VARCHAR" property="roleId" />
    <result column="permission_code" jdbcType="VARCHAR" property="permissionCode" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    insert into auth_role_permissions_rel (id, role_id, permission_code, 
      created_at, updated_at)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=VARCHAR}, #{permissionCode,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.xueda.food.auth.model.AuthRolePermissionsRel">
    update auth_role_permissions_rel
    set role_id = #{roleId,jdbcType=VARCHAR},
      permission_code = #{permissionCode,jdbcType=VARCHAR},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, role_id, permission_code, created_at, updated_at
    from auth_role_permissions_rel
  </select>
</mapper>